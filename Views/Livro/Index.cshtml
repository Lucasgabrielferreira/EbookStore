@model X.PagedList.IPagedList<Livro>
@using X.Web.PagedList

@{
    ViewData["Title"] = "Lista de Livros";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>Lista de Livros</h1>
    <a class="btn btn-success" asp-action="Create">Cadastrar novo Livro</a>
</div>

<!-- Campo de Busca -->
<form asp-action="Index" method="get">
    <div class="input-group mb-3">
        <input type="text" name="searchString" class="form-control" placeholder="Buscar por título ou descrição" value="@ViewData["CurrentFilter"]">
        <button class="btn btn-outline-secondary" type="submit">Buscar</button>
    </div>

    <div class="form-group">
        <label for="pageSize">Itens por página:</label>
        <select id="pageSize" name="pageSize" class="form-select" onchange="this.form.submit()">
            @{
                var currentPageSize = ViewData["CurrentPageSize"]?.ToString();
                var options = new List<SelectListItem>
            {
            new SelectListItem { Value = "5", Text = "5", Selected = currentPageSize == "5" },
            new SelectListItem { Value = "10", Text = "10", Selected = currentPageSize == "10" },
            new SelectListItem { Value = "20", Text = "20", Selected = currentPageSize == "20" },
            new SelectListItem { Value = "50", Text = "50", Selected = currentPageSize == "50" }
            };
            }

            @foreach (var option in options)
            {
                <option value="@option.Value" selected="@(option.Selected ? "selected" : null)">@option.Text</option>
            }
        </select>
    </div>
</form>

<div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Capa</th>
                <th scope="col">Título</th>
                <th scope="col">Descrição</th>
                <th scope="col">Preço</th>
                <th scope="col">Categoria</th>
                <th scope="col">Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var livro in Model)
            {
                <tr>
                    <!-- Exibe a capa do livro -->
                    <td>
                        <img src="~/images/@(string.IsNullOrEmpty(livro.Imagem) ? "placeholder.jpg" : livro.Imagem)" alt="Capa do livro" style="width: 50px; height: 75px; object-fit: cover;" />
                    </td>
                    <th scope="row">@livro.Titulo</th>
                    <td>@livro.Descricao</td>
                    <td>@livro.Preco.ToString("C")</td>
                    <td>@livro.Categoria?.Nome</td>
                    <td>
                        <button type="button" class="btn btn-dark" data-bs-toggle="modal"
                                data-bs-target="#detalhesModal" data-nome="@livro.Titulo"
                                data-descricao="@livro.Descricao" data-autor="@livro.Autor?.Nome"
                                data-imagem="~/images/@(string.IsNullOrEmpty(livro.Imagem) ? "placeholder.jpg" : livro.Imagem)">
                            <span class="fa fa-search"></span>
                        </button>
                        <a asp-controller="Livro" asp-action="Edit" asp-route-id="@livro.Id" class="btn btn-warning fa fa-pencil"></a>
                        <a asp-controller="Livro" asp-action="Delete" asp-route-id="@livro.Id" class="btn btn-danger fa fa-trash"></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = ViewData["CurrentPageSize"], searchString = ViewData["CurrentFilter"] }), new PagedListRenderOptions
   {
       UlElementClasses = new[] { "pagination" },
       LiElementClasses = new[] { "page-item" },
       PageClasses = new[] { "page-link" },
       DisplayLinkToFirstPage = PagedListDisplayMode.Always,
       DisplayLinkToLastPage = PagedListDisplayMode.Always,
       DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
       DisplayLinkToNextPage = PagedListDisplayMode.Always,
       DisplayLinkToIndividualPages = true,
       LinkToFirstPageFormat = "<< First",
       LinkToPreviousPageFormat = "< Previous",
       LinkToNextPageFormat = "Next >",
       LinkToLastPageFormat = "Last >>",
       Display = PagedListDisplayMode.Always
   })
    </div>

    @if (!string.IsNullOrEmpty(ViewData["CurrentFilter"] as string))
    {
        <footer>
            <a class="btn btn-info" asp-controller="Livro" asp-action="Index">Voltar</a>
        </footer>
    }

    <footer>
        <a class="btn btn-primary" asp-controller="Home" asp-action="Index">Página inicial</a>
    </footer>
</div>

<!-- Modal -->
<div class="modal fade" id="detalhesModal" tabindex="-1" aria-labelledby="detalhesModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detalhesModalLabel">Detalhes do Livro</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-4">
                        <!-- Exibe a capa do livro no modal -->
                        <img id="livroImagem" src="" alt="Capa do livro" class="img-fluid" />
                    </div>
                    <div class="col-md-8">
                        <p><strong>Título:</strong> <span id="livroTitulo"></span></p>
                        <p><strong>Descrição:</strong> <span id="livroDescricao"></span></p>
                        <p><strong>Autor:</strong> <span id="livroAutor"></span></p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#detalhesModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Botão que acionou o modal
                var titulo = button.data('nome');
                var descricao = button.data('descricao');
                var autor = button.data('autor');
                var imagem = button.data('imagem');

                // Ajuste o caminho da imagem para remover o "~"
                var imagemSrc = imagem.replace("~", "");

                // Atualize o conteúdo do modal
                $('#livroTitulo').text(titulo);
                $('#livroDescricao').text(descricao);
                $('#livroAutor').text(autor);
                $('#livroImagem').attr('src', imagemSrc);
            });
        });
    </script>
}
